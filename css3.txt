transform：rotate（**deg）；旋转（顺时针）
选择器
盒模型
背景和边框
文字特效
2D/3D转换
动画
多列布局
用户界面

CSS3边框
圆角	border-radius	border-radius:25px;
盒子阴影box-shadow	box-shadow: 10px 10px 5px 	#888888;
				     x	  y  阴影程度	阴影颜色
border-image 属性允许你指定一个图片作为边框！ 用于创建上文边框的原始图像：
在 div 中使用图片创建边框:
border-image-repeat	用于设置图像边界是否应重复（repeat）、拉伸（stretch）或铺满（round）

//border-radius	
四个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。
三个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角
两个值: 第一个值为左上角与右下角，第二个值为右上角与左下角
一个值： 四个圆角值相同

//background-image
	background-image: url(img_flwr.gif), url(paper.gif);	//同时设置两个背景图片
   	background-position: right bottom, left top;	//第一张图片位于右下，第二张图片位于左上
    	background-repeat: no-repeat, repeat;	//第一张图片不重复，第二张图片可重复排
    	padding: 15px;
background-size：w，h	可以设置图片的宽高	
background-Origin属性指定了背景图像的位置区域。
content-box, padding-box,和 border-box区域内可以放置背景图像。

gradient	渐变效果
linear-gradient（）：线性渐变，只有两个颜色值（从上到下）to right （从左到右）
对角：左上->右下	 background: linear-gradient(to bottom right, red , blue); /* 标准的语法 */
background: linear-gradient(angle, color-stop1, color-stop2);
角度是指水平线和渐变线之间的角度，逆时针方向计算。换句话说，0deg 将创建一个从下到上的渐变，90deg 将创建一个从左到右的渐变。

CSS3文本效果
text-shadow：文本阴影
word-wrap：break-word	如果某个单词太长，不适合在一个区域内，它扩展到外面

CSS3字体
@font-face
	@font-face
	{
		font-family: myFirstFont;
		src: url(sansation_bold.woff);	//引入字体文件
		font-weight:bold;
		}

	div
	{
		font-family:myFirstFont;
	}

2D变换
transform
	rotate（角度）：旋转
	translate（xpx，ypx）根据左(X轴)和顶部(Y轴)位置给定的参数，从当前元素位置移动。
	scale（num，num）该元素增加或减少的大小，取决于宽度（X轴）和高度（Y轴）的参数：num（0-1）：缩小；大于1增大
	transform:skew(<angle> [,<angle>]);倾斜，第一个参数代表X轴，第二个参数代表Y轴

3D转换
rotateX（角度）	rotateY（角度）绕X/Y轴旋转多少角度
scale3d(x,y,z)	定义 3D 缩放转换。

过渡效果
应用于宽度属性的过渡效果，时长为 2 秒：
div
{
    transition: width 2s;
    -webkit-transition: width 2s; /* Safari */
}

CSS3动画
@keyframes
当在 @keyframes 创建动画，把它绑定到一个选择器，否则动画不会有任何效果。
指定至少这两个CSS3的动画属性绑定向一个选择器：
规定动画的名称
规定动画的时长
div
{
	width:100px;
	height:100px;
	background:red;
	animation:myfirst 5s;	//规定动画名称以及完成一个周期所花费的时间单位秒或毫秒
	-webkit-animation:myfirst 5s; /* Safari and Chrome */
}
@keyframes myfirst
{
	from {background:red;}
	to {background:yellow;}
}

CSS3多列属性
column-count：3；将文本分为3列
column-gap：10px；指定列与列间的间隙为10px
column-rule-style：solid；属性指定了列与列间的边框样式：
column-rule-width
column-rule-color
column-rule：1px solid lightblue；设置列直接的边框的厚度，样式，颜色；
column-span
column-width

CSS3用户界面
resize，resize属性指定一个元素是否应该由用户去调整大小。
div
{
    resize:both;
    overflow:auto;
}
box-sizing，box-sizing 属性允许您以确切的方式定义适应某个区域的具体内容。
outline-offset，outline-offset 属性对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。
	outline:2px solid red;
   	outline-offset:15px;

border-radius 圆角属性
过渡属性transition
如果你需要自由缩放图片，且图片放大的尺寸不大于其原始的最大值，则可使用以下代码：
img：max-width:100%;height:auto;
图片滤镜
CSS filter 属性用为元素添加可视效果 (例如：模糊与饱和度) 。
注意: Internet Explorer 或 Safari 5.1 (及更早版本) 不支持该属性。

按钮：
按钮颜色：background-color
按钮大小：font-size
圆角按钮：border-radius
按钮边框颜色：border：1px solid color
鼠标悬停过渡效果： transition-duration: 0.4s;过渡时间
盒子阴影：box-shadow
禁用按钮：not-allowed
	按钮动画

CSS3边框
如果在元素上设置了 box-sizing: border-box; 则 padding(内边距) 和 border(边框) 也包含在 width 和 height 中:

弹性盒子！！！
弹性盒子！！！CSS3 弹性盒（ Flexible Box 或 flexbox），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。
弹性容器通过设置 display 属性的值为 flex 或 inline-flex将其定义为弹性容器。
direction:rtl;   rtl->(right-to-left) 弹性子元素的排列方式从右到左flex-direction 指定了弹性子元素在父容器中的位置
flex-direction：row|		row-reverse|	column|		column-reverse
		默认（从左到右）从右到左	从上至下（纵向排列）	从下至上
justify-content 内容对齐justify-content: flex-start | flex-end | center | space-between | space-aroundalign-items 
设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式
align-items: flex-start | flex-end | center | baseline | stretch
flex-wrap 属性用于指定弹性盒子的子元素换行方式。
flex-wrap: nowrap|	wrap|			wrap-reverse|initial|inherit;	
	默认一行排列	溢出部分另起一行	反转排列	
align-content 属性用于修改 flex-wrap 属性的行为。
类似于 align-items, 但它不是设置弹性子元素的对齐，而是设置各个行的对齐	
align-content: flex-start | flex-end | center | space-between | space-around | stretch

多媒体查询
CSS3 多媒体类型
值	描述
all	用于所有多媒体类型设备
print	用于打印机
screen	用于电脑屏幕，平板，智能手机等。
speech	用于屏幕阅读器
在指定的设备上使用对应的样式替代原有的样式
@media screen and (min-width: 480px) {
    body {
        background-color: lightgreen;
    }
}//在屏幕可视窗口尺寸大于480像素的设备上修改背景颜色
